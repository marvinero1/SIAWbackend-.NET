// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using SIAW.Models;

namespace SIAW.Data
{
    public partial class DBContext : DbContext
    {
        public DBContext()
        {
        }

        public DBContext(DbContextOptions<DBContext> options)
            : base(options)
        {
        }

        public virtual DbSet<acaseguradora> acaseguradora { get; set; }
        public virtual DbSet<ad_conexion_vpn> ad_conexion_vpn { get; set; }
        public virtual DbSet<adarea> adarea { get; set; }
        public virtual DbSet<addepto> addepto { get; set; }
        public virtual DbSet<adempresa> adempresa { get; set; }
        public virtual DbSet<admoneda> admoneda { get; set; }
        public virtual DbSet<adparametros> adparametros { get; set; }
        public virtual DbSet<adparametros_complementarias> adparametros_complementarias { get; set; }
        public virtual DbSet<adparametros_diasextranc> adparametros_diasextranc { get; set; }
        public virtual DbSet<adparametros_tarifasfact> adparametros_tarifasfact { get; set; }
        public virtual DbSet<adprovincia> adprovincia { get; set; }
        public virtual DbSet<adsiat_tipodocidentidad> adsiat_tipodocidentidad { get; set; }
        public virtual DbSet<adtipocambio> adtipocambio { get; set; }
        public virtual DbSet<adunidad> adunidad { get; set; }
        public virtual DbSet<adusparametros> adusparametros { get; set; }
        public virtual DbSet<adusuario> adusuario { get; set; }
        public virtual DbSet<cmtipocompra> cmtipocompra { get; set; }
        public virtual DbSet<cncuenta> cncuenta { get; set; }
        public virtual DbSet<cnnumeracion> cnnumeracion { get; set; }
        public virtual DbSet<cnplancuenta> cnplancuenta { get; set; }
        public virtual DbSet<cntipo> cntipo { get; set; }
        public virtual DbSet<cotipo> cotipo { get; set; }
        public virtual DbSet<fncuenta> fncuenta { get; set; }
        public virtual DbSet<inalmacen> inalmacen { get; set; }
        public virtual DbSet<inconcepto> inconcepto { get; set; }
        public virtual DbSet<inctrlstock> inctrlstock { get; set; }
        public virtual DbSet<ingrupo> ingrupo { get; set; }
        public virtual DbSet<ingrupomer> ingrupomer { get; set; }
        public virtual DbSet<initem> initem { get; set; }
        public virtual DbSet<initem_controltarifa> initem_controltarifa { get; set; }
        public virtual DbSet<initem_max> initem_max { get; set; }
        public virtual DbSet<inkit> inkit { get; set; }
        public virtual DbSet<inlinea> inlinea { get; set; }
        public virtual DbSet<inmatriz> inmatriz { get; set; }
        public virtual DbSet<inreserva> inreserva { get; set; }
        public virtual DbSet<inresistencia> inresistencia { get; set; }
        public virtual DbSet<inrosca> inrosca { get; set; }
        public virtual DbSet<instoactual> instoactual { get; set; }
        public virtual DbSet<insubgrupo_vta> insubgrupo_vta { get; set; }
        public virtual DbSet<intarifa> intarifa { get; set; }
        public virtual DbSet<interminacion> interminacion { get; set; }
        public virtual DbSet<intipocarga> intipocarga { get; set; }
        public virtual DbSet<intipoinv> intipoinv { get; set; }
        public virtual DbSet<intipomovimiento> intipomovimiento { get; set; }
        public virtual DbSet<intipopedido> intipopedido { get; set; }
        public virtual DbSet<intiposolurgente> intiposolurgente { get; set; }
        public virtual DbSet<inudemed> inudemed { get; set; }
        public virtual DbSet<pepersona> pepersona { get; set; }
        public virtual DbSet<peplanporcen> peplanporcen { get; set; }
        public virtual DbSet<seclasificacion> seclasificacion { get; set; }
        public virtual DbSet<selog> selog { get; set; }
        public virtual DbSet<semodulo> semodulo { get; set; }
        public virtual DbSet<seprograma> seprograma { get; set; }
        public virtual DbSet<serol> serol { get; set; }
        public virtual DbSet<serolprogs> serolprogs { get; set; }
        public virtual DbSet<vecliente> vecliente { get; set; }
        public virtual DbSet<vedescuento> vedescuento { get; set; }
        public virtual DbSet<vedesextra> vedesextra { get; set; }
        public virtual DbSet<vedesitem> vedesitem { get; set; }
        public virtual DbSet<veempaque> veempaque { get; set; }
        public virtual DbSet<veempaque1> veempaque1 { get; set; }
        public virtual DbSet<venumeracion> venumeracion { get; set; }
        public virtual DbSet<veplanpago> veplanpago { get; set; }
        public virtual DbSet<veproforma> veproforma { get; set; }
        public virtual DbSet<veproforma1> veproforma1 { get; set; }
        public virtual DbSet<vevendedor> vevendedor { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.UseCollation("SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<acaseguradora>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.direccion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.email)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.nit)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.telefono)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<ad_conexion_vpn>(entity =>
            {
                entity.HasKey(e => e.agencia)
                    .IsClustered(false);

                entity.Property(e => e.agencia)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.bd_sql)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.contrasena_sql)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.servidor_sql)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.usuario_sql)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<adarea>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK_adagencia");

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.ciudad)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.empresa)
                    .IsRequired()
                    .HasMaxLength(2);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<addepto>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo).HasMaxLength(3);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<adempresa>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(2);

                entity.Property(e => e.Fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.Horareg).HasMaxLength(5);

                entity.Property(e => e.Usuarioreg).HasMaxLength(10);

                entity.Property(e => e.actividad).HasMaxLength(50);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.direccion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.moneda).HasMaxLength(3);

                entity.Property(e => e.monedapol)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.municipio).HasMaxLength(30);

                entity.Property(e => e.nit).HasMaxLength(15);
            });

            modelBuilder.Entity<admoneda>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(3);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg).HasMaxLength(5);

                entity.Property(e => e.usuarioreg).HasMaxLength(10);
            });

            modelBuilder.Entity<adparametros>(entity =>
            {
                entity.HasKey(e => e.codempresa)
                    .IsClustered(false);

                entity.Property(e => e.codempresa).HasMaxLength(2);

                entity.Property(e => e.acmonedaajuste)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.afp).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.aportevoluntario).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.bd_main_office).HasMaxLength(4);

                entity.Property(e => e.bd_opcional)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.carpeta_backup_facturas).HasMaxLength(200);

                entity.Property(e => e.cincosabados).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ciudad).HasMaxLength(50);

                entity.Property(e => e.ciudad_reportes_conta)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.codctaperdida)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.codctautilidad)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.codcuentaajustes)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.codcuentaajustesmn)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_costeo)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_monto_max_mora)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_monto_max_mora_revertir_credito)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.codmonedafact)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.comisionafp).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.condicion)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.controla_tiempo_uso)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.ctabancofactura)
                    .HasMaxLength(75)
                    .IsUnicode(false);

                entity.Property(e => e.ctacredfiscal)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.ctadebfiscal)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ctsc1_descripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.ctsc2_descripcion)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.cuatrosabados).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.dias_igualacion).HasDefaultValueSql("(0)");

                entity.Property(e => e.diascomerciales).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.dircertif_produccion).HasMaxLength(200);

                entity.Property(e => e.dircertif_pruebas).HasMaxLength(200);

                entity.Property(e => e.distancia_mts_cobertura).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.estado_final_proformas).HasMaxLength(30);

                entity.Property(e => e.fecha_cambio_pesos_aran).HasColumnType("smalldatetime");

                entity.Property(e => e.fecha_carta).HasColumnType("smalldatetime");

                entity.Property(e => e.fecha_inicio_nsf).HasColumnType("smalldatetime");

                entity.Property(e => e.fecha_inicio_rutas).HasColumnType("date");

                entity.Property(e => e.firma).HasMaxLength(50);

                entity.Property(e => e.frase)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.horasdia).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.horasmes).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.it)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.iue).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.iva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.mail_recepcion_facturas).HasMaxLength(50);

                entity.Property(e => e.maxdiaspp).HasDefaultValueSql("(0)");

                entity.Property(e => e.mingarantizado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.minnacional).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.minnoimponible).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.moneda_monto_min_vta_cliente_oficina)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.monedae)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.monminnal).HasMaxLength(4);

                entity.Property(e => e.monminnoimpo).HasMaxLength(4);

                entity.Property(e => e.monregcomple).HasMaxLength(4);

                entity.Property(e => e.monto_limite_me_extracto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_limite_mn_extracto).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_maximo_facturas_sin_nombre).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_maximo_mora).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_maximo_mora_revertir_credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_min_vta_cliente_oficina).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_rnd100011).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.negativos).HasDefaultValueSql("(0)");

                entity.Property(e => e.nrobruto)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.nuevos_depositos_desde).HasColumnType("smalldatetime");

                entity.Property(e => e.pie).HasColumnType("text");

                entity.Property(e => e.pnsv).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcencomcbzas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcencomventas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_afp).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_asn1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_asn2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_asn3).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_cns).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_fonvis).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_infocal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pwd_certif_produccion).HasMaxLength(100);

                entity.Property(e => e.pwd_certif_pruebas).HasMaxLength(100);

                entity.Property(e => e.pwd_mail_recepcion_facturas).HasMaxLength(50);

                entity.Property(e => e.rciva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.referencia).HasMaxLength(70);

                entity.Property(e => e.reffirma).HasMaxLength(50);

                entity.Property(e => e.regcomple).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.resp_lc_ci)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.resp_lc_nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.resp_lv_ci)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.resp_lv_nombre)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.riesgocomun).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.riesgoprof).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.servidor_main_office).HasMaxLength(20);

                entity.Property(e => e.servidor_opcional)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.tenor).HasColumnType("text");

                entity.Property(e => e.textoconforme).HasMaxLength(150);

                entity.Property(e => e.tipo_arbol_evaluacion).HasMaxLength(15);

                entity.Property(e => e.topemonto_asn1).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.topemonto_asn2).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.topemonto_asn3).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.valida_max_vta_nr_pf)
                    .HasMaxLength(2)
                    .IsFixedLength();

                entity.Property(e => e.vtascontado_ce_sinpago_desde).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<adparametros_complementarias>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__adparame__40F9A2072C8DF2BB");

                entity.Property(e => e.codempresa)
                    .HasMaxLength(2)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.monto).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<adparametros_diasextranc>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__adparame__40F9A20737E5CD8B");

                entity.Property(e => e.codempresa)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.porcen_pagado).HasColumnType("decimal(18, 0)");
            });

            modelBuilder.Entity<adparametros_tarifasfact>(entity =>
            {
                entity.HasKey(e => e.codtarifa)
                    .HasName("PK__adparame__721E41F1CE685F34");

                entity.Property(e => e.codtarifa).ValueGeneratedNever();

                entity.Property(e => e.codempresa)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<adprovincia>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo).HasMaxLength(8);

                entity.Property(e => e.coddepto)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<adsiat_tipodocidentidad>(entity =>
            {
                entity.HasKey(e => new { e.codigo, e.cuis, e.codigoclasificador })
                    .HasName("PK_adsiat_tipodocidentidad_1");

                entity.Property(e => e.codigo).ValueGeneratedOnAdd();

                entity.Property(e => e.cuis).HasMaxLength(20);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.usuarioreg).HasMaxLength(30);
            });

            modelBuilder.Entity<adtipocambio>(entity =>
            {
                entity.HasKey(e => new { e.monedabase, e.moneda, e.fecha, e.codalmacen });

                entity.Property(e => e.monedabase).HasMaxLength(3);

                entity.Property(e => e.moneda).HasMaxLength(3);

                entity.Property(e => e.fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.factor).HasColumnType("decimal(18, 8)");

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<adunidad>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<adusparametros>(entity =>
            {
                entity.HasKey(e => e.usuario)
                    .IsClustered(false);

                entity.Property(e => e.usuario).HasMaxLength(10);

                entity.Property(e => e.accesos).HasDefaultValueSql("(1)");

                entity.Property(e => e.cd_idcuenta_cme)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.cd_idcuenta_cmn)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.cd_idcuenta_otrosing)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.cd_idcuenta_otrosingresos)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.cd_idfncambio)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cmtipocompra)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cmtipoprovision)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.codcliente)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda).HasMaxLength(3);

                entity.Property(e => e.codmonedatdc)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codtalonario_defecto)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.codtipo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidcobranza)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidembarque)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidodc)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidpedido)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidproforma)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpidrecepcion)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.cpmoneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.dirpuente)
                    .HasMaxLength(300)
                    .IsUnicode(false);

                entity.Property(e => e.idcobranza).HasMaxLength(5);

                entity.Property(e => e.idcobranza_contado).HasMaxLength(10);

                entity.Property(e => e.idcomprobante).HasMaxLength(10);

                entity.Property(e => e.idcuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.idcuenta_caja_chica)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.idfactura).HasMaxLength(5);

                entity.Property(e => e.idmovimiento)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.idnotacredito)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.idpedido)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.idproforma).HasMaxLength(5);

                entity.Property(e => e.idremision).HasMaxLength(5);

                entity.Property(e => e.idremito)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.idticket_cliente).HasMaxLength(8);

                entity.Property(e => e.opcion_talonario_por_defecto).HasMaxLength(50);

                entity.Property(e => e.reportes_exporta).HasDefaultValueSql("((0))");

                entity.Property(e => e.sizerep).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.ver_extractos).HasMaxLength(30);

                entity.Property(e => e.ver_saldos_otras_ags).HasMaxLength(30);
            });

            modelBuilder.Entity<adusuario>(entity =>
            {
                entity.HasKey(e => e.login);

                entity.Property(e => e.login).HasMaxLength(10);

                entity.Property(e => e.codrol)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.correo).HasMaxLength(200);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.fechareg_siaw)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.password)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.password_siaw)
                    .IsRequired()
                    .HasMaxLength(40)
                    .HasDefaultValueSql("('')");

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.vencimiento).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<cmtipocompra>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.codunidad)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<cncuenta>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo).HasMaxLength(15);

                entity.Property(e => e.ajuste_codcuenta)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ajuste_codcuenta_aplicacion)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ajuste_codmoneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codcuentapadre).HasMaxLength(15);

                entity.Property(e => e.creaaux).HasDefaultValueSql("((0))");

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<cnnumeracion>(entity =>
            {
                entity.Property(e => e.id).HasMaxLength(10);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.desde).HasColumnType("smalldatetime");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.hasta).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<cnplancuenta>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<cntipo>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__cntipo__40F9A207694BD93F");

                entity.Property(e => e.codigo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<cotipo>(entity =>
            {
                entity.Property(e => e.id).HasMaxLength(5);

                entity.Property(e => e.codunidad)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<fncuenta>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.balance).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.codmoneda)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fecha).HasColumnType("datetime");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.tipo_movimiento)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<inalmacen>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.actividad).HasMaxLength(600);

                entity.Property(e => e.codmoneda_min_solurgente)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(35)
                    .IsUnicode(false);

                entity.Property(e => e.direccion).HasMaxLength(50);

                entity.Property(e => e.email).HasMaxLength(100);

                entity.Property(e => e.estandar).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.fax).HasMaxLength(100);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.idcuenta_caja_me)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.idcuenta_caja_mn)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.latitud)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.longitud)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.lugar)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.min_solurgente).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.minimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.monestandar).HasMaxLength(3);

                entity.Property(e => e.nropatronal)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.pesoest).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesoest_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesomin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesomin_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcenmin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcenmin_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.sucursallc)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.telefono).HasMaxLength(50);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<inconcepto>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.cliente).HasMaxLength(10);

                entity.Property(e => e.descripcion).HasMaxLength(60);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.nroactual).HasDefaultValueSql("(0)");

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<inctrlstock>(entity =>
            {
                entity.Property(e => e.coditem)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.coditemcontrol)
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.porcentaje).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<ingrupo>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<ingrupomer>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(45);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<initem>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(8);

                entity.Property(e => e.clasificacion)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.codigobarra)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.codlinea)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.codmoneda_valor_criterio)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codproducto_sin).HasMaxLength(8);

                entity.Property(e => e.codresistencia)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.costo).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.descripabr).HasMaxLength(7);

                entity.Property(e => e.descripcion).HasMaxLength(60);

                entity.Property(e => e.descripcorta).HasMaxLength(12);

                entity.Property(e => e.estadocv)
                    .IsRequired()
                    .HasMaxLength(1);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.iva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.medida)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.monedacosto)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.nandina)
                    .HasMaxLength(20)
                    .IsUnicode(false);

                entity.Property(e => e.peso).HasColumnType("decimal(10, 7)");

                entity.Property(e => e.porcen_gac).HasColumnType("decimal(18, 3)");

                entity.Property(e => e.porcen_saldo_restringido).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.rosca)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.saldominimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.terminacion)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.tipo).HasMaxLength(20);

                entity.Property(e => e.unidad)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<initem_controltarifa>(entity =>
            {
                entity.Property(e => e.coditem)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.codtarifa_a).HasDefaultValueSql("(0)");

                entity.Property(e => e.codtarifa_b).HasDefaultValueSql("(0)");
            });

            modelBuilder.Entity<initem_max>(entity =>
            {
                entity.Property(e => e.coditem)
                    .IsRequired()
                    .HasMaxLength(8)
                    .IsUnicode(false);

                entity.Property(e => e.maximo).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<inkit>(entity =>
            {
                entity.HasKey(e => new { e.codigo, e.item });

                entity.Property(e => e.codigo).HasMaxLength(8);

                entity.Property(e => e.item).HasMaxLength(8);

                entity.Property(e => e.cantidad).HasColumnType("decimal(18, 7)");

                entity.Property(e => e.unidad)
                    .IsRequired()
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<inlinea>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(5);

                entity.Property(e => e.codsubgrupo_vta)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descdetallada).HasMaxLength(200);

                entity.Property(e => e.descripcion).HasMaxLength(60);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.porcentaje_comis).HasColumnType("decimal(18, 4)");

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<inmatriz>(entity =>
            {
                entity.HasKey(e => new { e.hoja, e.linea })
                    .HasName("PK_INMATRIZ");

                entity.Property(e => e.hoja).HasMaxLength(5);

                entity.Property(e => e.A).HasMaxLength(10);

                entity.Property(e => e.B).HasMaxLength(10);

                entity.Property(e => e.C).HasMaxLength(10);

                entity.Property(e => e.D).HasMaxLength(10);

                entity.Property(e => e.E).HasMaxLength(10);

                entity.Property(e => e.F).HasMaxLength(10);

                entity.Property(e => e.G).HasMaxLength(10);

                entity.Property(e => e.H).HasMaxLength(10);

                entity.Property(e => e.I).HasMaxLength(10);

                entity.Property(e => e.J).HasMaxLength(10);

                entity.Property(e => e.K).HasMaxLength(10);

                entity.Property(e => e.L).HasMaxLength(10);

                entity.Property(e => e.M).HasMaxLength(10);
            });

            modelBuilder.Entity<inreserva>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.coditem).HasMaxLength(8);
            });

            modelBuilder.Entity<inresistencia>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<inrosca>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(3);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<instoactual>(entity =>
            {
                entity.HasKey(e => new { e.codalmacen, e.coditem })
                    .IsClustered(false);

                entity.Property(e => e.coditem).HasMaxLength(8);

                entity.Property(e => e.cantidad).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.pedido).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porllegar).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.proformas).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.udm)
                    .HasMaxLength(3)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<insubgrupo_vta>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(5);

                entity.Property(e => e.codgrupo_vta)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<intarifa>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.codmoneda_min_contado)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_contra_entrega)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_credito)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_entrega_contado)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_entrega_credito)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_nuevo_contado)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_nuevo_credito)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.min_contado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_contra_entrega).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_entrega_contado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_entrega_credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_nuevo_contado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_nuevo_credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.moneda)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.monedabase)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.montomin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.tipo)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.version)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.vta_cte_final_desde).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.vta_cte_final_hasta).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<interminacion>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo).HasMaxLength(3);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<intipocarga>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<intipoinv>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<intipomovimiento>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.codunidad)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<intipopedido>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<intiposolurgente>(entity =>
            {
                entity.HasKey(e => e.id)
                    .IsClustered(false);

                entity.Property(e => e.id)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<inudemed>(entity =>
            {
                entity.HasKey(e => e.Codigo);

                entity.Property(e => e.Codigo)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.Descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.Usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);
            });

            modelBuilder.Entity<pepersona>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.adicional)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.apellido1)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.apellido2).HasMaxLength(20);

                entity.Property(e => e.brevetauto).HasMaxLength(20);

                entity.Property(e => e.brevetmoto).HasMaxLength(20);

                entity.Property(e => e.categoria).HasMaxLength(1);

                entity.Property(e => e.celular).HasMaxLength(10);

                entity.Property(e => e.codbanco).HasMaxLength(10);

                entity.Property(e => e.codcategoria).HasMaxLength(4);

                entity.Property(e => e.coddependiente).HasMaxLength(15);

                entity.Property(e => e.codlocalidad).HasMaxLength(15);

                entity.Property(e => e.codobrasocial).HasMaxLength(4);

                entity.Property(e => e.codpostal).HasMaxLength(15);

                entity.Property(e => e.codsindicato).HasMaxLength(4);

                entity.Property(e => e.codtipo_contrato).HasMaxLength(30);

                entity.Property(e => e.condicion).HasDefaultValueSql("(0)");

                entity.Property(e => e.convenio).HasDefaultValueSql("(0)");

                entity.Property(e => e.cuentabanco).HasMaxLength(30);

                entity.Property(e => e.cuil).HasMaxLength(15);

                entity.Property(e => e.direccion).HasMaxLength(150);

                entity.Property(e => e.email).HasMaxLength(50);

                entity.Property(e => e.estado)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.fechaegreso).HasColumnType("smalldatetime");

                entity.Property(e => e.fechaingreso).HasColumnType("smalldatetime");

                entity.Property(e => e.fechanac).HasColumnType("smalldatetime");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.idvenc).HasColumnType("smalldatetime");

                entity.Property(e => e.latitud)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.localidad).HasMaxLength(20);

                entity.Property(e => e.longitud)
                    .HasMaxLength(25)
                    .IsUnicode(false);

                entity.Property(e => e.nombre1)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.nombre2).HasMaxLength(20);

                entity.Property(e => e.nroexplotacion).HasMaxLength(6);

                entity.Property(e => e.nua)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.numlibmili).HasMaxLength(20);

                entity.Property(e => e.numseguro).HasMaxLength(20);

                entity.Property(e => e.obs).HasMaxLength(250);

                entity.Property(e => e.obsdocumentos)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.obsnacimiento)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.obsnombre)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.padronmunicipal).HasMaxLength(20);

                entity.Property(e => e.padronrenta).HasMaxLength(20);

                entity.Property(e => e.paisreside)
                    .IsRequired()
                    .HasMaxLength(50);

                entity.Property(e => e.porevaluacion)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.provincia).HasMaxLength(20);

                entity.Property(e => e.refdireccion).HasMaxLength(250);

                entity.Property(e => e.sueldo)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("(0)");

                entity.Property(e => e.tarea).HasMaxLength(30);

                entity.Property(e => e.telefonodom).HasMaxLength(10);

                entity.Property(e => e.usuarioreg).HasMaxLength(10);

                entity.Property(e => e.venbrevet).HasColumnType("smalldatetime");

                entity.Property(e => e.venbrevetmoto).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<peplanporcen>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<seclasificacion>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__seclasif__40F9A20765929249");

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<selog>(entity =>
            {
                entity.Property(e => e.codigo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.detalle)
                    .HasMaxLength(500)
                    .IsUnicode(false);

                entity.Property(e => e.entidad)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.fecha).HasColumnType("date");

                entity.Property(e => e.hora)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.id_doc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.numeroid_doc)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.tipo)
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.usuario)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.ventana)
                    .HasMaxLength(100)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<semodulo>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK_adsistema");

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(50)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<seprograma>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__seprogra__40F9A207E2A8D748");

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.Fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.Horareg).HasMaxLength(5);

                entity.Property(e => e.Usuarioreg).HasMaxLength(10);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(40);

                entity.Property(e => e.nombre)
                    .IsRequired()
                    .HasMaxLength(40);
            });

            modelBuilder.Entity<serol>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .IsClustered(false);

                entity.Property(e => e.codigo)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<serolprogs>(entity =>
            {
                entity.HasKey(e => e.codigo)
                    .HasName("PK__serolpro__40F9A2077604DBF4");

                entity.Property(e => e.codrol)
                    .IsRequired()
                    .HasMaxLength(15)
                    .IsUnicode(false);
            });

            modelBuilder.Entity<vecliente>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).HasMaxLength(10);

                entity.Property(e => e.cartera)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.casilla).HasMaxLength(10);

                entity.Property(e => e.celular_titular).HasMaxLength(30);

                entity.Property(e => e.ci)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ci_contrato)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.ciudad_titular).HasMaxLength(30);

                entity.Property(e => e.clasificacion)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codlocalidad)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_maximo_vta)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codrubro)
                    .IsRequired()
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codtipo_identidad)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codzona)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.complemento_ci).HasMaxLength(3);

                entity.Property(e => e.condicion)
                    .HasMaxLength(40)
                    .IsUnicode(false);

                entity.Property(e => e.controla_precios).HasDefaultValueSql("('1')");

                entity.Property(e => e.credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.creditodisp).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.dias_reversion_items_especiales).HasDefaultValueSql("('30')");

                entity.Property(e => e.direccion_titular).HasMaxLength(150);

                entity.Property(e => e.email).HasMaxLength(50);

                entity.Property(e => e.es_cliente_final).HasDefaultValueSql("((0))");

                entity.Property(e => e.es_empresa).HasDefaultValueSql("((0))");

                entity.Property(e => e.fapertura).HasColumnType("smalldatetime");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.fvenccred).HasColumnType("smalldatetime");

                entity.Property(e => e.garantia).HasMaxLength(50);

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.iva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.latitud_titular).HasMaxLength(25);

                entity.Property(e => e.longitud_titular).HasMaxLength(25);

                entity.Property(e => e.maximo_vta).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.motivo_excepcion_clien_final).HasMaxLength(100);

                entity.Property(e => e.nit).HasMaxLength(15);

                entity.Property(e => e.nit_fact)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.nombre_comercial).HasMaxLength(200);

                entity.Property(e => e.nombre_contrato)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.nombre_fact).HasMaxLength(200);

                entity.Property(e => e.nroingresosbrutos)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.nropoder).HasMaxLength(20);

                entity.Property(e => e.obs)
                    .HasMaxLength(150)
                    .IsUnicode(false);

                entity.Property(e => e.obs_titular).HasMaxLength(150);

                entity.Property(e => e.permite_items_repetidos).HasDefaultValueSql("('0')");

                entity.Property(e => e.porcentaje_limite_descto_deposito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.razonsocial).HasMaxLength(200);

                entity.Property(e => e.refdireccion_titular).HasMaxLength(150);

                entity.Property(e => e.ruta).HasMaxLength(30);

                entity.Property(e => e.ruta1).HasMaxLength(30);

                entity.Property(e => e.situacion)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.telefono_titular).HasMaxLength(30);

                entity.Property(e => e.tipo)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.tipofactura)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.tiponotacredito)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.visitas_x_mes)
                    .HasColumnType("decimal(18, 2)")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.zona_titular).HasMaxLength(200);
            });

            modelBuilder.Entity<vedescuento>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<vedesextra>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.aplicacion).HasMaxLength(30);

                entity.Property(e => e.codmoneda_min_contado)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.codmoneda_min_credito)
                    .HasMaxLength(3)
                    .IsUnicode(false);

                entity.Property(e => e.descorta)
                    .IsRequired()
                    .HasMaxLength(6);

                entity.Property(e => e.descripcion)
                    .HasMaxLength(30)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.min_contado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.min_credito).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.peso_minimo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje).HasColumnType("decimal(5, 2)");

                entity.Property(e => e.tipo_venta).HasMaxLength(100);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.valido_desde).HasColumnType("smalldatetime");

                entity.Property(e => e.valido_hasta).HasColumnType("smalldatetime");
            });

            modelBuilder.Entity<vedesitem>(entity =>
            {
                entity.HasKey(e => new { e.codalmacen, e.coditem, e.nivel })
                    .HasName("PK_vedesgrup");

                entity.Property(e => e.coditem).HasMaxLength(8);

                entity.Property(e => e.nivel).HasMaxLength(1);

                entity.Property(e => e.descuento).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.desde).HasColumnType("numeric(18, 6)");

                entity.Property(e => e.hasta).HasColumnType("numeric(18, 6)");
            });

            modelBuilder.Entity<veempaque>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.corta)
                    .HasMaxLength(10)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<veempaque1>(entity =>
            {
                entity.HasKey(e => new { e.codempaque, e.item })
                    .HasName("PK_velistaemp");

                entity.Property(e => e.item).HasMaxLength(8);

                entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");
            });

            modelBuilder.Entity<venumeracion>(entity =>
            {
                entity.Property(e => e.id).HasMaxLength(5);

                entity.Property(e => e.codunidad)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.tipo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<veplanpago>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.Usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<veproforma>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.HasIndex(e => new { e.codalmacen, e.id, e.numeroid }, "inice_factura_id_nroid");

                entity.Property(e => e.codcliente)
                    .IsRequired()
                    .HasMaxLength(10);

                entity.Property(e => e.codcliente_real).HasMaxLength(10);

                entity.Property(e => e.codmoneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.complemento_ci)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.contra_entrega).HasDefaultValueSql("((0))");

                entity.Property(e => e.descuentos).HasColumnType("decimal(20, 2)");

                entity.Property(e => e.direccion).HasMaxLength(200);

                entity.Property(e => e.email).HasMaxLength(50);

                entity.Property(e => e.estado_contra_entrega).HasMaxLength(30);

                entity.Property(e => e.fecha).HasColumnType("smalldatetime");

                entity.Property(e => e.fecha_inicial)
                    .HasColumnType("smalldatetime")
                    .HasDefaultValueSql("('20110101')");

                entity.Property(e => e.fechaaut).HasColumnType("smalldatetime");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.fletepor).HasMaxLength(20);

                entity.Property(e => e.hora)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .IsFixedLength();

                entity.Property(e => e.hora_inicial)
                    .HasMaxLength(5)
                    .IsUnicode(false)
                    .HasDefaultValueSql("('00:00')");

                entity.Property(e => e.horaaut)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.id)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.idanticipo)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.idpf_complemento).HasMaxLength(5);

                entity.Property(e => e.idsoldesctos)
                    .HasMaxLength(5)
                    .IsUnicode(false);

                entity.Property(e => e.iva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.monto_anticipo).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.nit).HasMaxLength(15);

                entity.Property(e => e.niveles_descuento).HasMaxLength(12);

                entity.Property(e => e.nombre_transporte).HasMaxLength(100);

                entity.Property(e => e.nomcliente).HasMaxLength(200);

                entity.Property(e => e.obs)
                    .HasMaxLength(70)
                    .IsUnicode(false);

                entity.Property(e => e.obs2)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.odc).HasMaxLength(250);

                entity.Property(e => e.peso).HasColumnType("decimal(18, 5)");

                entity.Property(e => e.porceniva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.preparacion)
                    .HasMaxLength(30)
                    .IsUnicode(false);

                entity.Property(e => e.recargos).HasColumnType("decimal(20, 2)");

                entity.Property(e => e.subtotal).HasColumnType("decimal(20, 2)");

                entity.Property(e => e.tdc).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.tipoentrega)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.total).HasColumnType("decimal(20, 2)");

                entity.Property(e => e.transporte)
                    .HasMaxLength(250)
                    .IsUnicode(false);

                entity.Property(e => e.ubicacion).HasMaxLength(30);

                entity.Property(e => e.usuarioaut).HasMaxLength(30);

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            modelBuilder.Entity<veproforma1>(entity =>
            {
                entity.HasNoKey();

                entity.Property(e => e.cantaut).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.cantidad).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.cantidad_pedida).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.coditem)
                    .IsRequired()
                    .HasMaxLength(8);

                entity.Property(e => e.niveldesc)
                    .HasMaxLength(1)
                    .IsUnicode(false);

                entity.Property(e => e.obs).HasMaxLength(30);

                entity.Property(e => e.peso)
                    .HasColumnType("decimal(18, 7)")
                    .HasDefaultValueSql("('0')");

                entity.Property(e => e.porceniva).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.preciodesc).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.preciolista).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.precioneto).HasColumnType("decimal(18, 6)");

                entity.Property(e => e.total).HasColumnType("decimal(20, 6)");

                entity.Property(e => e.totalaut).HasColumnType("decimal(20, 6)");

                entity.Property(e => e.udm)
                    .IsRequired()
                    .HasMaxLength(3);
            });

            modelBuilder.Entity<vevendedor>(entity =>
            {
                entity.HasKey(e => e.codigo);

                entity.Property(e => e.codigo).ValueGeneratedNever();

                entity.Property(e => e.clave)
                    .HasMaxLength(15)
                    .IsUnicode(false);

                entity.Property(e => e.descripcion)
                    .IsRequired()
                    .HasMaxLength(30);

                entity.Property(e => e.estandar).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.fechareg).HasColumnType("smalldatetime");

                entity.Property(e => e.horareg)
                    .IsRequired()
                    .HasMaxLength(5);

                entity.Property(e => e.mingarantizado).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.moneda)
                    .IsRequired()
                    .HasMaxLength(3);

                entity.Property(e => e.monestandar).HasMaxLength(3);

                entity.Property(e => e.montomin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesoest).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesoest_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesomin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.pesomin_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcencomcbzas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcencomventas).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcenmin).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcenmin_rendi).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.porcentaje_crecimiento).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.usuarioreg)
                    .IsRequired()
                    .HasMaxLength(10);
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}